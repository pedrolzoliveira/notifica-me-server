generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url = env("DATABASE_URL")
}

model Customer {
    id String @id @default(uuid())
    name String
    email String @unique
    passwordHash String
    createdAt DateTime @default(now())
    receivers Receiver[]
}

model Receiver {
    id String @id @default(uuid())
    customer Customer? @relation(fields: [customerId], references: [id])
    customerId String?
    events EventType[]
    number String
    name String
    messenger Messenger
    notifications Notification[]
}

model EventType {
    code String @id
    name String @unique
    description String?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    events Event[]
    receivers Receiver[]
    plans Plan[]
    credentials Credential[]
}

model Event {
    id String @id @default(uuid())
    type EventType @relation(fields: [code], references: [code])
    code String 
    text String @db.Text
    createdAt DateTime @default(now())
    notifications Notification[]
}

model Notification {
    id String @id @default(uuid())
    event Event @relation(fields: [eventId], references: [id])
    eventId String
    receiver Receiver @relation(fields: [receiverId], references: [id])
    receiverId String
    createdAt DateTime @default(now())
}

model Plan {
    id String @id @default(uuid())
    name String
    description String
    price Int
    events EventType[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Credential {
    id String @id @default(uuid())
    key String
    name String
    eventType EventType @relation(fields: [eventCode], references: [code])
    eventCode String
    createdAt DateTime @default(now())
}

model Creator {
    id String @id @default(uuid())
    name String
    email String @unique
    passwordHash String
    createdAt DateTime @default(now())
}

enum Messenger {
    whatsapp
    telegram
    sms
}
